package Searching;

public class ElementsRotatedArray {
	
	
	static int pivotedBinarySearch(int[] arr, int key) {
		
		int l = 0;
		int r = arr.length - 1;
		int mid = l + (r-l)/2;
		
		if (arr[mid] == key) {
			return mid;
		}
		if (arr[l] < arr[mid]) {
			if (key >= arr[l] &&  key < arr[mid]){
				return binarySearch(arr,l,mid-1,key);
			}
			else {
				return binarySearch(arr,mid+1,r,key);
			}
		}
		else {
			if (key > arr[mid] &&  key <= arr[r]){
				return binarySearch(arr,mid+1,r,key);
			}
			else {
				return binarySearch(arr,l,mid-1,key);
			}
		}
	}
	
	static int binarySearch(int arr[], int l, int r, int x) 
    { 
        if (r>=l) 
        { 
            int mid = l + (r - l)/2; 
            if (arr[mid] == x) 
                return mid; 
            if (arr[mid] > x) 
                return binarySearch(arr, l, mid-1, x); 
            return binarySearch(arr, mid+1, r, x); 
        } 
        return -1; 
    } 
	
	public static void main(String args[]) 
    { 
        // Let us search 3 in below array 
        int arr1[] = { 5, 6, 7, 8, 9, 10, 1, 2, 3 }; 
        int n = arr1.length; 
        int key = 10; 
        System.out.println("Index of the element is : "
                           + pivotedBinarySearch(arr1, key)); 
    } 
}
